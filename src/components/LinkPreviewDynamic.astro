---
export interface Props {
  url: string;
}

const { url } = Astro.props;

// Get domain and create a clean fallback
const urlObj = new URL(url);
const domain = urlObj.hostname;
const cleanDomain = domain.replace('www.', '');

// Extract a readable title from the URL path
function getReadableTitle(url: string) {
  const path = new URL(url).pathname;
  const segments = path.split('/').filter(Boolean);
  if (segments.length > 0) {
    const lastSegment = segments[segments.length - 1];
    return lastSegment
      .replace(/[-_]/g, ' ')
      .replace(/\.[^/.]+$/, '') // remove extension
      .split(' ')
      .map(word => word.charAt(0).toUpperCase() + word.slice(1))
      .join(' ');
  }
  return cleanDomain;
}

const title = getReadableTitle(url);
---

<div class="link-preview">
  <a href={url} target="_blank" rel="noopener noreferrer" class="link-preview-link">
    <div class="link-preview-content">
      <div class="link-preview-text">
        <h4 class="link-preview-title">{title}</h4>
        <p class="link-preview-domain">{cleanDomain}</p>
      </div>
      <div class="link-preview-icon">
        <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1.5">
          <path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71"></path>
          <path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71"></path>
        </svg>
      </div>
    </div>
  </a>
</div>

<style>
  .link-preview {
    margin: var(--space-2xl) 0;
    border-left: 3px solid var(--color-border);
    transition: all 0.2s ease;
  }

  .link-preview:hover {
    border-left-color: var(--color-accent);
  }

  .link-preview-link {
    display: block;
    text-decoration: none;
    padding: var(--space-lg) var(--space-xl);
    transition: all 0.2s ease;
  }

  .link-preview-link:hover {
    background: var(--color-surface);
    transform: translateX(var(--space-xs));
  }

  .link-preview-content {
    display: flex;
    align-items: center;
    justify-content: space-between;
    gap: var(--space-lg);
  }

  .link-preview-text {
    flex: 1;
  }

  .link-preview-title {
    font-size: var(--text-base);
    font-weight: 500;
    color: var(--color-text-primary);
    margin-bottom: var(--space-xs);
    line-height: var(--leading-tight);
  }

  .link-preview-domain {
    font-size: var(--text-xs);
    color: var(--color-text-tertiary);
    text-transform: uppercase;
    letter-spacing: 0.1em;
    font-weight: 600;
    margin: 0;
  }

  .link-preview-icon {
    color: var(--color-text-tertiary);
    opacity: 0.5;
    transition: all 0.2s ease;
    flex-shrink: 0;
  }

  .link-preview-link:hover .link-preview-icon {
    opacity: 1;
    color: var(--color-accent);
  }

  /* Mobile responsive */
  @media (max-width: 768px) {
    .link-preview-link {
      padding: var(--space-md) var(--space-lg);
    }
    
    .link-preview-content {
      gap: var(--space-md);
    }
  }
</style>

