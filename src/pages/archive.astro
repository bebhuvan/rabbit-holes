---
export const prerender = true;

import { getCollection } from 'astro:content';
import Base from '../layouts/Base.astro';
import { formatDateShort, calculateReadingTime } from '../utils/shared';

const posts = await getCollection('posts', ({ data }) => {
  return data.published !== false;
});

// Sort posts by date (newest first)
const sortedPosts = posts.sort((a, b) => 
  new Date(b.data.date).getTime() - new Date(a.data.date).getTime()
);

// Group posts by year and month
const postsByYear = sortedPosts.reduce((acc, post) => {
  const date = new Date(post.data.date);
  const year = date.getFullYear();
  const month = date.toLocaleString('default', { month: 'long' });
  
  if (!acc[year]) acc[year] = {};
  if (!acc[year][month]) acc[year][month] = [];
  
  acc[year][month].push(post);
  return acc;
}, {} as any);

// Calculate statistics
const stats = {
  total: posts.length,
  byType: posts.reduce((acc, post) => {
    acc[post.data.type] = (acc[post.data.type] || 0) + 1;
    return acc;
  }, {} as any),
  thisYear: posts.filter(post => 
    new Date(post.data.date).getFullYear() === new Date().getFullYear()
  ).length
};

const years = Object.keys(postsByYear).sort((a, b) => parseInt(b) - parseInt(a));
---

<Base title="Archive - Rabbit Holes" description="Browse all blog posts organized by date. Explore musings, links, videos, and music from this curiosity-driven journey.">
  <div class="archive-container">
    <div class="archive-header">
      <h1>Archive</h1>
      <p>All {stats.total} posts organized by year and month</p>
    </div>

    <!-- Archive Statistics -->
    <div class="archive-stats">
      <div class="stat-card">
        <span class="stat-number">{stats.total}</span>
        <span class="stat-label">Total Posts</span>
      </div>
      <div class="stat-card">
        <span class="stat-number">{stats.thisYear}</span>
        <span class="stat-label">This Year</span>
      </div>
      <div class="stat-card">
        <span class="stat-number">{stats.byType.musing || 0}</span>
        <span class="stat-label">Musings</span>
      </div>
      <div class="stat-card">
        <span class="stat-number">{stats.byType.link || 0}</span>
        <span class="stat-label">Links</span>
      </div>
    </div>

    <!-- Filter buttons -->
    <div class="archive-filters">
      <button class="filter-btn active" onclick="filterArchive('all')">All</button>
      <button class="filter-btn" onclick="filterArchive('musing')">Musings</button>
      <button class="filter-btn" onclick="filterArchive('link')">Links</button>
      <button class="filter-btn" onclick="filterArchive('video')">Videos</button>
      <button class="filter-btn" onclick="filterArchive('music')">Music</button>
    </div>

    <!-- Posts by year -->
    <div class="archive-content">
      {years.map(year => (
        <div class="year-section">
          <h2 class="year-header">{year}</h2>
          
          {Object.entries(postsByYear[year]).map(([month, monthPosts]) => (
            <div class="month-group">
              <h3 class="month-header">{month}</h3>
              
              <div class="archive-posts">
                {(monthPosts as any[]).map(post => (
                  <div class="archive-post" data-type={post.data.type} data-date={post.data.date}>
                    <div class="archive-post-date">
                      {formatDateShort(new Date(post.data.date))}
                    </div>
                    <div class={`archive-post-type ${post.data.type}`}></div>
                    <a href={`/posts/${post.slug}`} class="archive-post-title">
                      {post.data.title}
                    </a>
                    <span class="archive-post-reading-time">{calculateReadingTime(post.body || '')} min</span>
                  </div>
                ))}
              </div>
            </div>
          ))}
        </div>
      ))}
    </div>
  </div>

  <style>
    .archive-container {
      max-width: var(--width-content);
      margin: 0 auto;
      padding: var(--space-4xl) var(--space-lg);
    }

    .archive-header {
      text-align: center;
      margin-bottom: var(--space-4xl);
    }

    .archive-header h1 {
      font-size: var(--text-4xl);
      font-weight: 700;
      margin-bottom: var(--space-lg);
      color: var(--text-primary);
      letter-spacing: -0.025em;
      line-height: var(--leading-tight);
    }

    .archive-header p {
      color: var(--text-secondary);
      font-size: var(--text-xl);
      line-height: var(--leading-relaxed);
    }

    .archive-stats {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(180px, 1fr));
      gap: var(--space-lg);
      margin-bottom: var(--space-3xl);
    }

    .stat-card {
      padding: var(--space-lg) 0;
      text-align: center;
      transition: all 0.2s ease;
    }

    .stat-number {
      font-size: var(--text-3xl);
      font-weight: 700;
      color: var(--accent);
      display: block;
      letter-spacing: -0.02em;
    }

    .stat-label {
      color: var(--text-secondary);
      font-size: var(--text-sm);
      margin-top: var(--space-xs);
      font-weight: 500;
    }

    .archive-filters {
      display: flex;
      justify-content: center;
      gap: var(--space-md);
      margin-bottom: var(--space-3xl);
      flex-wrap: wrap;
    }

    .filter-btn {
      padding: var(--space-sm) var(--space-lg);
      border: 1px solid var(--border);
      background: none;
      color: var(--text-tertiary);
      border-radius: 0;
      cursor: pointer;
      transition: all 0.2s ease;
      font-size: var(--text-sm);
      font-family: inherit;
      font-weight: 500;
      text-transform: uppercase;
      letter-spacing: 0.05em;
    }

    .filter-btn.active, .filter-btn:hover {
      color: var(--accent);
      border-color: var(--accent);
    }

    .year-section {
      margin-bottom: var(--space-4xl);
    }

    .year-header {
      font-size: var(--text-2xl);
      font-weight: 600;
      margin-bottom: var(--space-xl);
      color: var(--text-primary);
      border-bottom: 2px solid var(--border);
      padding-bottom: var(--space-sm);
      letter-spacing: -0.015em;
    }

    .month-group {
      margin-bottom: var(--space-2xl);
    }

    .month-header {
      font-size: var(--text-lg);
      font-weight: 600;
      margin-bottom: var(--space-lg);
      color: var(--text-secondary);
      letter-spacing: -0.01em;
    }

    .archive-posts {
      display: flex;
      flex-direction: column;
      gap: var(--space-sm);
    }

    .archive-post {
      display: flex;
      align-items: center;
      gap: var(--space-lg);
      padding: var(--space-md) 0;
      border-bottom: 1px solid var(--border);
      transition: all 0.2s ease;
    }

    .archive-post:hover {
      padding-left: var(--space-md);
      border-left: 3px solid var(--accent);
    }

    .archive-post-date {
      color: var(--text-tertiary);
      font-size: var(--text-sm);
      min-width: 85px;
      font-weight: 500;
    }

    .archive-post-type {
      width: 14px;
      height: 14px;
      border-radius: 3px;
      flex-shrink: 0;
    }

    .archive-post-type.musing { background: var(--yellow); }
    .archive-post-type.link { background: var(--blue); }
    .archive-post-type.video { background: var(--pink); }
    .archive-post-type.music { background: var(--green); }

    .archive-post-title {
      color: var(--text-primary);
      text-decoration: none;
      font-weight: 500;
      flex: 1;
      transition: color 0.2s ease;
      font-size: var(--text-base);
      line-height: var(--leading-normal);
    }

    .archive-post-title:hover {
      color: var(--accent);
    }

    /* Mobile responsive */
    @media (max-width: 768px) {
      .archive-container {
        padding: var(--space-3xl) var(--space-md);
      }
      
      @media (max-width: 480px) {
        .archive-container {
          padding: var(--space-2xl) var(--space-sm);
        }
      }

      .archive-header h1 {
        font-size: 28px;
      }

      .archive-stats {
        grid-template-columns: repeat(2, 1fr);
        gap: 16px;
      }

      .stat-card {
        padding: 16px;
      }

      .stat-number {
        font-size: 24px;
      }

      .archive-filters {
        gap: 12px;
      }

      .archive-post {
        padding: 8px 0;
      }

      .archive-post:hover {
        margin: 0 -12px;
        padding: 8px 12px;
      }
    }
  </style>

  <script>
    // Archive filtering
    function filterArchive(type: string) {
      const posts = document.querySelectorAll('.archive-post');
      const buttons = document.querySelectorAll('.filter-btn');
      
      // Update active filter button
      buttons.forEach(btn => btn.classList.remove('active'));
      event?.target?.classList.add('active');
      
      // Filter posts
      posts.forEach(post => {
        const postElement = post as HTMLElement;
        if (type === 'all' || postElement.dataset.type === type) {
          postElement.style.display = 'flex';
        } else {
          postElement.style.display = 'none';
        }
      });
      
      // Hide empty month groups
      const monthGroups = document.querySelectorAll('.month-group');
      monthGroups.forEach(group => {
        const groupElement = group as HTMLElement;
        const visiblePosts = groupElement.querySelectorAll('.archive-post[style*="flex"], .archive-post:not([style])');
        groupElement.style.display = visiblePosts.length > 0 ? 'block' : 'none';
      });
    }
    
    // Make filterArchive available globally
    window.filterArchive = filterArchive;
  </script>
</Base>