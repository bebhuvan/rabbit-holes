---
export const prerender = true;

import { getCollection } from 'astro:content';
import Base from '../../layouts/Base.astro';
import PostCard from '../../components/PostCard.astro';

export async function getStaticPaths() {
  const posts = await getCollection('posts', ({ data }) => {
    return data.published !== false;
  });
  
  // Get all unique tags
  const tags = [...new Set(posts.flatMap(post => post.data.tags))];
  
  return tags.map(tag => ({
    params: { tag },
    props: { 
      posts: posts.filter(post => post.data.tags.includes(tag)),
      tag 
    }
  }));
}

const { posts, tag } = Astro.props;

// Sort posts by date (newest first)
const sortedPosts = posts.sort((a: any, b: any) => 
  new Date(b.data.date).getTime() - new Date(a.data.date).getTime()
);

// Get related tags (tags that appear together with this tag)
const relatedTags = [...new Set(
  posts.flatMap((post: any) => post.data.tags)
    .filter((t: string) => t !== tag)
)]
  .slice(0, 10); // Limit to 10 related tags
---

<Base title={`Posts tagged "${tag}" - Bhuvan's Blog`} description={`All posts tagged with ${tag}`}>
  <div class="tag-page-container">
    <div class="tag-header">
      <h1>#{tag}</h1>
      <p>{posts.length} post{posts.length !== 1 ? 's' : ''} tagged with <strong>{tag}</strong></p>
    </div>

    {/* Tag stats */}
    <div class="tag-stats">
      <div class="stat-item">
        <span class="stat-number">{posts.length}</span>
        <span class="stat-label">Posts</span>
      </div>
      <div class="stat-item">
        <span class="stat-number">
          {posts.reduce((acc: number, post: any) => {
            const uniqueTypes = new Set();
            uniqueTypes.add(post.data.type);
            return uniqueTypes.size;
          }, new Set(posts.map((p: any) => p.data.type)).size)}
        </span>
        <span class="stat-label">Content Types</span>
      </div>
      <div class="stat-item">
        <span class="stat-number">
          {new Date(Math.max(...posts.map((p: any) => new Date(p.data.date).getTime()))).getFullYear()}
        </span>
        <span class="stat-label">Latest Year</span>
      </div>
    </div>

    {/* Posts */}
    <section class="tag-posts">
      <h2>All Posts</h2>
      <div class="posts-list">
        {sortedPosts.map((post: any) => (
          <PostCard post={post} showExcerpt={true} />
        ))}
      </div>
    </section>

    {/* Related tags */}
    {relatedTags.length > 0 && (
      <section class="related-tags">
        <h2>Related Tags</h2>
        <p>Tags that often appear together with <strong>{tag}</strong></p>
        <div class="related-tags-list">
          {relatedTags.map((relatedTag: string) => (
            <a href={`/tags/${relatedTag}`} class="related-tag">
              #{relatedTag}
            </a>
          ))}
        </div>
      </section>
    )}

    {/* Navigation */}
    <div class="tag-navigation">
      <a href="/tags" class="back-to-tags">← All Tags</a>
      <a href="/archive" class="view-archive">View Archive →</a>
    </div>
  </div>

  <style>
    .tag-page-container {
      max-width: 700px;
      margin: 0 auto;
      padding: 80px 20px;
    }

    .tag-header {
      text-align: center;
      margin-bottom: 60px;
    }

    .tag-header h1 {
      font-size: 48px;
      font-weight: 700;
      margin-bottom: 16px;
      color: var(--accent);
      font-family: monospace;
    }

    .tag-header p {
      color: var(--color-text-secondary);
      font-size: 18px;
    }

    .tag-stats {
      display: grid;
      grid-template-columns: repeat(3, 1fr);
      gap: 24px;
      margin-bottom: 60px;
    }

    .stat-item {
      background: var(--hover);
      padding: 24px;
      border-radius: 12px;
      text-align: center;
      border: 1px solid var(--border);
    }

    .stat-number {
      font-size: 32px;
      font-weight: 700;
      color: var(--accent);
      display: block;
    }

    .stat-label {
      color: var(--color-text-secondary);
      font-size: 14px;
      margin-top: 4px;
    }

    .tag-posts {
      margin-bottom: 60px;
    }

    .tag-posts h2 {
      font-size: 24px;
      font-weight: 600;
      margin-bottom: 32px;
      color: var(--color-text-primary);
    }

    .posts-list {
      display: flex;
      flex-direction: column;
      gap: 40px;
    }

    .related-tags {
      margin-bottom: 60px;
      padding: 32px;
      background: var(--hover);
      border-radius: 12px;
      border: 1px solid var(--border);
    }

    .related-tags h2 {
      font-size: 20px;
      font-weight: 600;
      margin-bottom: 8px;
      color: var(--color-text-primary);
    }

    .related-tags p {
      color: var(--color-text-secondary);
      margin-bottom: 20px;
      font-size: 15px;
    }

    .related-tags-list {
      display: flex;
      flex-wrap: wrap;
      gap: 12px;
    }

    .related-tag {
      display: inline-block;
      padding: 8px 16px;
      background: var(--bg);
      color: var(--color-text-secondary);
      text-decoration: none;
      font-size: 14px;
      border-radius: 16px;
      border: 1px solid var(--border);
      transition: all 0.2s ease;
      font-family: monospace;
    }

    .related-tag:hover {
      background: var(--accent);
      color: white;
      border-color: var(--accent);
      transform: translateY(-1px);
    }

    .tag-navigation {
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding-top: 40px;
      border-top: 1px solid var(--border);
    }

    .back-to-tags,
    .view-archive {
      color: var(--accent);
      text-decoration: none;
      font-weight: 500;
      transition: color 0.2s ease;
    }

    .back-to-tags:hover,
    .view-archive:hover {
      color: var(--color-text-primary);
    }

    /* Mobile responsive */
    @media (max-width: 768px) {
      .tag-page-container {
        padding: var(--space-2xl) var(--space-md);
      }

      .tag-header h1 {
        font-size: 36px;
      }

      .tag-stats {
        grid-template-columns: 1fr;
        gap: 16px;
      }

      .stat-item {
        padding: var(--space-md);
      }

      .stat-number {
        font-size: 24px;
      }

      .related-tags {
        padding: 24px;
      }

      .tag-navigation {
        flex-direction: column;
        gap: 16px;
        text-align: center;
      }
    }
  </style>
</Base>