---
export const prerender = true;

import { getCollection } from 'astro:content';
import Base from '../../layouts/Base.astro';
import PostCard from '../../components/PostCard.astro';
import Comments from '../../components/Comments.astro';
import { getRelatedPosts, formatRelatedPostReasons } from '../../utils/relatedPosts';
import { formatDate, calculateReadingTime } from '../../utils/shared';

export async function getStaticPaths() {
  const posts = await getCollection('posts', ({ data }) => {
    return data.published !== false;
  });
  
  return posts.map(post => ({
    params: { slug: post.slug },
    props: { post }
  }));
}

const { post } = Astro.props;
const { Content } = await post.render();

// Get all posts for related posts algorithm
const allPosts = await getCollection('posts', ({ data }) => {
  return data.published !== false;
});

// Use advanced related posts algorithm
const relatedPostsWithScores = getRelatedPosts(post, allPosts, 3);

// Structured data for individual posts
const structuredData = {
  "@context": "https://schema.org",
  "@type": "BlogPosting",
  "headline": post.data.title,
  "description": post.data.description || `A ${post.data.type} post about ${post.data.title}`,
  "author": {
    "@type": "Person",
    "name": "Bhuvan",
    "url": "https://www.rabbitholes.garden/about"
  },
  "datePublished": post.data.date,
  "dateModified": post.data.date,
  "publisher": {
    "@type": "Organization",
    "name": "Bhuvan's Blog",
    "logo": {
      "@type": "ImageObject",
      "url": "https://www.rabbitholes.garden/favicon.svg"
    }
  },
  "mainEntityOfPage": {
    "@type": "WebPage",
    "@id": `https://www.rabbitholes.garden/posts/${post.slug}`
  },
  "keywords": post.data.tags?.join(', ') || '',
  "articleSection": post.data.type,
  ...(post.data.url && { "url": post.data.url })
};
---

<Base 
  title={post.data.title} 
  description={post.data.description}
  image={post.data.image}
>
  <!-- Structured Data for SEO -->
  <script type="application/ld+json" set:html={JSON.stringify(structuredData)}></script>
  
  <article class="post-page">
    <div class="container">
      <div class="date">{new Date(post.data.date).toLocaleDateString('en-US', { month: 'long', day: 'numeric', year: 'numeric' })}</div>
      <h1>{post.data.title}</h1>

      <div class="article-content drop-cap">
        <Content />
      </div>

      <!-- Share Options -->
      <div class="share-section">
        <div class="share-label">Share this</div>
        <div class="share-buttons">
          <button class="share-btn" id="share-twitter" title="Share on Twitter">
            <svg width="16" height="16" viewBox="0 0 24 24" fill="currentColor">
              <path d="M18.244 2.25h3.308l-7.227 8.26 8.502 11.24H16.17l-5.214-6.817L4.99 21.75H1.68l7.73-8.835L1.254 2.25H8.08l4.713 6.231zm-1.161 17.52h1.833L7.084 4.126H5.117z"/>
            </svg>
            Twitter
          </button>
          <button class="share-btn" id="share-linkedin" title="Share on LinkedIn">
            <svg width="16" height="16" viewBox="0 0 24 24" fill="currentColor">
              <path d="M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z"/>
            </svg>
            LinkedIn
          </button>
          <button class="share-btn" id="share-email" title="Share via Email">
            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <path d="M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z"/>
              <polyline points="22,6 12,13 2,6"/>
            </svg>
            Email
          </button>
          <button class="share-btn" id="share-copy" title="Copy link">
            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71"/>
              <path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71"/>
            </svg>
            Copy
          </button>
        </div>
      </div>

      {relatedPostsWithScores.length > 0 && (
        <div class="continue-reading">
          <div class="continue-reading-label">Continue Reading</div>
          <div class="related-articles">
            {relatedPostsWithScores.slice(0, 2).map(({ post: relatedPost }) => (
              <a href={`/posts/${relatedPost.slug}`} class="related-article">
                <div class="date">{new Date(relatedPost.data.date).toLocaleDateString('en-US', { month: 'long', day: 'numeric', year: 'numeric' })}</div>
                <h3>{relatedPost.data.title}</h3>
                <p>{relatedPost.data.description || (relatedPost.body || '').replace(/#+\s*/g, '').replace(/\[.*?\]\(.*?\)/g, '').slice(0, 100).trim()}â€¦</p>
              </a>
            ))}
          </div>
        </div>
      )}

      <Comments
        pageId={post.slug}
        pageUrl={`https://www.rabbitholes.garden/posts/${post.slug}`}
        pageTitle={post.data.title}
      />
    </div>
  </article>

  <style>
    .post-page {
      max-width: var(--width-content);
      margin: 0 auto;
      padding: 80px 40px 120px;
    }

    .date {
      font-family: 'Outfit', sans-serif;
      font-size: 11px;
      color: var(--color-accent);
      margin-bottom: 24px;
      letter-spacing: 0.15em;
      font-weight: 600;
      text-transform: uppercase;
    }

    h1 {
      font-family: 'Outfit', sans-serif;
      font-size: 60px;
      font-weight: 700;
      line-height: 1.08;
      letter-spacing: -0.025em;
      margin-bottom: 56px;
      color: var(--color-text-primary);
    }

    .article-content {
      font-size: 22px;
      line-height: 1.8;
      color: var(--color-text-secondary);
    }

    .article-content :global(p) {
      margin-bottom: 28px;
    }

    .article-content :global(p:last-child) {
      margin-bottom: 0;
    }

    .article-content :global(h2) {
      font-family: 'Outfit', sans-serif;
      font-size: 32px;
      font-weight: 600;
      line-height: 1.3;
      margin-top: 56px;
      margin-bottom: 20px;
      letter-spacing: -0.018em;
      color: var(--color-text-primary);
    }

    /* Blockquote styling - Editorial */
    .article-content :global(blockquote) {
      margin: 80px 0;
      padding: 48px 0 48px 64px;
      border-left: 3px solid var(--color-accent);
      background: linear-gradient(90deg, rgba(232, 118, 83, 0.015) 0%, transparent 100%);
      position: relative;
      font-family: 'Crimson Pro', serif;
      font-size: 26px;
      font-weight: 400;
      line-height: 1.6;
      font-style: italic;
      color: var(--color-text-secondary);
      letter-spacing: -0.005em;
    }

    .article-content :global(blockquote::before) {
      content: '"';
      font-family: 'Crimson Pro', serif;
      font-size: 72px;
      font-weight: 400;
      font-style: normal;
      position: absolute;
      top: 0;
      left: -56px;
      color: var(--color-accent);
      opacity: 0.35;
      line-height: 1;
    }

    .article-content :global(blockquote p) {
      margin: 0 0 12px 0;
    }

    .article-content :global(blockquote p:last-child) {
      margin-bottom: 0;
    }

    .article-content :global(blockquote strong) {
      font-weight: 600;
      font-style: normal;
      color: var(--color-text-primary);
    }

    /* Share Section */
    .share-section {
      margin-top: 80px;
      padding-top: 48px;
      border-top: 1px solid var(--color-border-light);
    }

    .share-label {
      font-family: 'Outfit', sans-serif;
      font-size: 11px;
      color: var(--color-text-light);
      margin-bottom: 20px;
      letter-spacing: 0.15em;
      font-weight: 600;
      text-transform: uppercase;
    }

    .share-buttons {
      display: flex;
      gap: 12px;
      flex-wrap: wrap;
    }

    .share-btn {
      font-family: 'Outfit', sans-serif;
      font-size: 13px;
      font-weight: 500;
      padding: 12px 20px;
      border: 1px solid var(--color-border);
      background: transparent;
      color: var(--color-text-secondary);
      cursor: pointer;
      transition: all 0.2s ease;
      display: inline-flex;
      align-items: center;
      gap: 8px;
    }

    .share-btn:hover {
      background: var(--color-accent);
      color: var(--color-bg);
      border-color: var(--color-accent);
    }

    .share-btn svg {
      opacity: 0.7;
      transition: opacity 0.2s ease;
    }

    .share-btn:hover svg {
      opacity: 1;
    }

    .share-btn.copied {
      background: var(--color-success);
      color: white;
      border-color: var(--color-success);
    }

    .continue-reading {
      margin-top: 100px;
      padding-top: 56px;
      border-top: 3px solid var(--color-text-primary);
    }

    .continue-reading-label {
      font-family: 'Outfit', sans-serif;
      font-size: 11px;
      color: var(--color-accent);
      margin-bottom: 44px;
      letter-spacing: 0.15em;
      font-weight: 700;
      text-transform: uppercase;
    }

    .related-articles {
      display: flex;
      flex-direction: column;
      gap: 44px;
    }

    .related-article {
      text-decoration: none;
      display: block;
      transition: transform 0.2s ease;
    }

    .related-article:hover {
      transform: translateX(4px);
    }

    .related-article .date {
      margin-bottom: 14px;
    }

    .related-article h3 {
      font-family: 'Outfit', sans-serif;
      font-size: 26px;
      font-weight: 600;
      line-height: 1.2;
      color: var(--color-text-primary);
      margin-bottom: 12px;
      letter-spacing: -0.01em;
      transition: color 0.2s ease;
    }

    .related-article:hover h3 {
      color: var(--color-accent);
    }

    .related-article p {
      font-size: 19px;
      line-height: 1.6;
      color: var(--color-text-tertiary);
    }

    @media (max-width: 768px) {
      .post-page {
        padding: 60px 24px 80px;
      }

      h1 {
        font-size: 40px;
        margin-bottom: 48px;
      }

      .article-content {
        font-size: 20px;
      }

      .article-content :global(h2) {
        font-size: 28px;
        margin-top: 48px;
        margin-bottom: 18px;
      }

      .article-content :global(blockquote) {
        margin: 60px 0;
        padding: 36px 0 36px 48px;
        font-size: 22px;
      }

      .article-content :global(blockquote::before) {
        font-size: 56px;
        top: 0;
        left: -44px;
      }

      .continue-reading {
        margin-top: 80px;
        padding-top: 48px;
      }

      .related-article h3 {
        font-size: 24px;
      }
    }
  </style>

  <script>
    // Share functionality
    const postTitle = document.querySelector('h1').textContent;
    const postUrl = window.location.href;

    // Twitter share
    document.getElementById('share-twitter')?.addEventListener('click', () => {
      const text = encodeURIComponent(postTitle);
      const url = encodeURIComponent(postUrl);
      window.open(`https://twitter.com/intent/tweet?text=${text}&url=${url}`, '_blank', 'width=550,height=420');
    });

    // LinkedIn share
    document.getElementById('share-linkedin')?.addEventListener('click', () => {
      const url = encodeURIComponent(postUrl);
      window.open(`https://www.linkedin.com/sharing/share-offsite/?url=${url}`, '_blank', 'width=550,height=420');
    });

    // Email share
    document.getElementById('share-email')?.addEventListener('click', () => {
      const subject = encodeURIComponent(postTitle);
      const body = encodeURIComponent(`I thought you might find this interesting:\n\n${postTitle}\n${postUrl}`);
      window.location.href = `mailto:?subject=${subject}&body=${body}`;
    });

    // Copy link
    document.getElementById('share-copy')?.addEventListener('click', async () => {
      const btn = document.getElementById('share-copy');
      try {
        await navigator.clipboard.writeText(postUrl);
        btn.textContent = 'âœ“ Copied!';
        btn.classList.add('copied');
        setTimeout(() => {
          btn.innerHTML = '<svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"><path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71"/><path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71"/></svg> Copy';
          btn.classList.remove('copied');
        }, 2000);
      } catch (err) {
        console.error('Failed to copy:', err);
      }
    });
  </script>
</Base>