name: Deploy to Cloudflare Workers

on:
  push:
    branches: [master]
  workflow_dispatch:  # Allow manual trigger as backup

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 20  # Prevent hanging builds
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history for better caching
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Clear npm cache
        run: npm cache clean --force
        continue-on-error: true  # Don't fail if cache clean has issues
      
      - name: Install dependencies with retry
        run: |
          for i in 1 2 3; do
            echo "Attempt $i of 3"
            npm ci --prefer-offline --no-audit && break || {
              if [ $i -eq 3 ]; then
                echo "npm ci failed, trying npm install as fallback"
                npm install --legacy-peer-deps --no-audit || exit 1
              fi
              echo "Retrying in 5 seconds..."
              sleep 5
            }
          done
      
      - name: Build with error handling
        run: |
          # Try build with standard settings
          npm run build || {
            echo "Build failed, trying with relaxed settings..."
            # Try build with NODE_OPTIONS for more memory
            NODE_OPTIONS="--max-old-space-size=4096" npm run build || {
              echo "Build still failing, attempting minimal build..."
              # Last resort: build with minimal settings
              NODE_ENV=production npm run build || exit 1
            }
          }
      
      - name: Deploy to Cloudflare Workers
        id: deploy
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN_NEW }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: deploy --env=""
        continue-on-error: true
      
      - name: Retry deployment if failed
        if: steps.deploy.outcome == 'failure'
        run: |
          echo "First deployment attempt failed, retrying..."
          sleep 10
          npx wrangler deploy --env=""
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN_NEW }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
      
      - name: Create deployment status
        if: always()
        run: |
          if [ "${{ job.status }}" == "success" ]; then
            echo "✅ Deployment successful!"
          else
            echo "⚠️ Deployment had issues but site may still be accessible"
          fi